apiVersion: template.openshift.io/v1
kind: Template
labels:
  template: s2i-sb-fuse-service-db
  app: ${APP_NAME}
  name: ${APP_NAME}
objects:
  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${SERVICE_NAME}-route
    spec:
      to:
        kind: Service
        name: ${SERVICE_NAME}
  - apiVersion: v1
    kind: Service
    metadata:
      annotations: {}
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${SERVICE_NAME}
    spec:
      clusterIP: None
      deprecatedPublicIPs: []
      ports:
        - port: 9411
          protocol: TCP
          targetPort: 8080
      selector:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
  - apiVersion: v1
    kind: ImageStream
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec: {}
    status:
      dockerImageRepository: ""
  - apiVersion: v1
    kind: BuildConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      output:
        to:
          kind: ImageStreamTag
          name: ${APP_NAME}:latest
      resources:
        limits:
          memory: ${BUILD_MEMORY_LIMIT}
        requests:
          memory: ${BUILD_MEMORY_REQUEST}
      source:
        contextDir: ${GIT_CONTEXT_DIR}
        git:
          ref: ${GIT_REF}
          uri: ${GIT_REPO}
        type: Git
      strategy:
        sourceStrategy:
          env:
            - name: BUILD_LOGLEVEL
              value: "5"
            - name: ARTIFACT_DIR
              value: ${ARTIFACT_DIR}
            - name: MAVEN_ARGS
              value: ${MAVEN_ARGS}
            - name: MAVEN_ARGS_APPEND
              value: ${MAVEN_ARGS_APPEND}
            - name: MAVEN_MIRROR_URL
              value: ${MAVEN_MIRROR_URL}
          forcePull: true
          from:
            kind: ImageStreamTag
            name: ${BASE_IMAGE_NAME}:${BUILDER_VERSION}
            namespace: ${IMAGE_STREAM_NAMESPACE}
          incremental: true
        type: Source
      triggers:
        - github:
            secret: ${BUILD_SECRET}
          type: GitHub
        - generic:
            secret: ${BUILD_SECRET}
          type: Generic
        - type: ConfigChange
        - imageChange: {}
          type: ImageChange
    status:
      lastVersion: 0
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      creationTimestamp: null
      labels:
        app: ${APP_NAME}
        component: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      name: ${APP_NAME}
    spec:
      replicas: 1
      selector:
        app: ${APP_NAME}
        component: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
        group: quickstarts
        provider: s2i
        version: ${APP_VERSION}
      template:
        metadata:
          creationTimestamp: null
          labels:
            app: ${APP_NAME}
            com.company: Red_Hat
            component: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
            group: quickstarts
            provider: s2i
            rht.comp: ${APP_NAME}
            rht.comp_ver: ${APP_VERSION}
            rht.prod_name: Red_Hat_Integration
            rht.prod_ver: "7.11"
            version: ${APP_VERSION}
        spec:
          containers:
            - env:
                - name: KUBERNETES_NAMESPACE
                  valueFrom:
                    fieldRef:
                      fieldPath: metadata.namespace
                - name: DB_SERVICE_NAME
                  value: ${DB_SERVICE_NAME}
                - name: DB_SERVICE_DATABASE
                  value: ${DB_SERVICE_DATABASE}
                - name: DB_SERVICE_USERNAME
                  value: ${DB_SERVICE_USERNAME}
                - name: DB_SERVICE_PASSWORD
                  value: ${DB_SERVICE_PASSWORD}
              image: library/${APP_NAME}:latest
              livenessProbe:
                httpGet:
                  path: /actuator/health
                  port: 8081
                initialDelaySeconds: 180
              name: ${APP_NAME}
              ports:
                - containerPort: 8080
                  name: http
                - containerPort: 8778
                  name: jolokia
              readinessProbe:
                httpGet:
                  path: /actuator/health
                  port: 8081
                initialDelaySeconds: 10
              resources:
                limits:
                  cpu: ${CPU_LIMIT}
                  memory: ${MEMORY_LIMIT}
                requests:
                  cpu: ${CPU_REQUEST}
                  memory: ${MEMORY_REQUEST}
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: ${APP_NAME}:latest
          type: ImageChange
parameters:
  - description: The name assigned to the application.
    displayName: Application Name
    name: APP_NAME
    required: true
    value: s2i-fuse711-spring-boot-2-camel-rest-sql
  - description: The URL of the repository with your application source code.
    displayName: Git Repository URL
    name: GIT_REPO
    required: true
    value: https://github.com/fabric8-quickstarts/spring-boot-camel-rest-sql.git
  - description: Set this to a branch name, tag or other ref of your repository if you are not using the default branch.
    displayName: Git Reference
    name: GIT_REF
    value: spring-boot-camel-rest-sql-7.11.0.fuse-sb2-7_11_0-00023-redhat-00001
  - description: Context directory
    displayName: Git Context Directory
    name: GIT_CONTEXT_DIR
  - description: Exposed service name.
    displayName: Service Name
    name: SERVICE_NAME
    value: camel-rest-sql
  - description: Set this to the name of the TCP service of the DB server. You may need to create a server first.
    displayName: DB Server Service
    name: DB_SERVICE_NAME
    required: true
    value: oracle
  - description: The database hosted by the DB server to be used by the application.
    displayName: DB Server Database
    name: DB_SERVICE_DATABASE
    required: true
    value: sampledb
  - description: The username used to authenticate with the DB server. Leave it empty if authentication is disabled.
    displayName: DB Server Username
    name: DB_SERVICE_USERNAME
  - description: The password used to authenticate with the DB server. Leave it empty if authentication is disabled.
    displayName: DB Server Password
    name: DB_SERVICE_PASSWORD
  - description: The base image used. Default is fuse7-java-openshift which is JDK8 based; fuse7-java11-openshift is JDK11 based
    displayName: Base Image Name, JDK11 or JDK8
    name: BASE_IMAGE_NAME
    value: fuse7-java11-openshift
  - description: The version of the FIS S2I builder image to use.
    displayName: Builder version
    name: BUILDER_VERSION
    value: "1.11"
  - description: The application version.
    displayName: Application Version
    name: APP_VERSION
    value: 7.11.0.fuse-sb2-7_11_0-00023-redhat-00001
  - description: Arguments passed to mvn in the build.
    displayName: Maven Arguments
    name: MAVEN_ARGS
    value: package -DskipTests -Djkube.skip -e -B
  - description: Extra arguments passed to mvn, e.g. for multi-module builds.
    displayName: Extra Maven Arguments
    name: MAVEN_ARGS_APPEND
  - description: Maven mirror to use for S2I builds.
    displayName: Maven mirror URL
    name: MAVEN_MIRROR_URL
  - description: Directory of the artifact to be built, e.g. for multi-module builds.
    displayName: Maven build directory
    name: ARTIFACT_DIR
  - description: Namespace in which the Fuse ImageStreams are installed. These ImageStreams are normally installed in the openshift namespace. You should only need to modify this if you've installed the ImageStreams in a different namespace/project.
    displayName: Image Stream Namespace
    name: IMAGE_STREAM_NAMESPACE
    required: true
    value: openshift
  - description: The secret needed to trigger a build.
    displayName: Git Build Secret
    from: '[a-zA-Z0-9]{40}'
    generate: expression
    name: BUILD_SECRET
  - description: The amount of CPU to request.
    displayName: CPU request
    name: CPU_REQUEST
    required: true
    value: "0.2"
  - description: The amount of memory required for the container to run.
    displayName: Memory request
    name: MEMORY_REQUEST
    required: true
    value: 256Mi
  - description: The amount of CPU the container is limited to use.
    displayName: CPU limit
    name: CPU_LIMIT
    required: true
    value: "1.0"
  - description: The amount of memory the container is limited to use.
    displayName: Memory limit
    name: MEMORY_LIMIT
    required: true
    value: 256Mi
  - description: The amount of memory to request for builds.
    displayName: Build Memory request
    name: BUILD_MEMORY_REQUEST
    required: true
    value: 0.7G
  - description: The amount of memory the build container is limited to use.
    displayName: Build Memory limit
    name: BUILD_MEMORY_LIMIT
    required: true
    value: 1G
